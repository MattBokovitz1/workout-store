{"ast":null,"code":"var _jsxFileName = \"/Users/MattBokovitz/Desktop/workout-store/client/src/components/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"../hooks/useForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  firstName: \"\",\n  lastName: \"\",\n  address: \"\",\n  city: \"\",\n  state: \"\",\n  zip: \"\"\n}; // This form should be handled by a \"useForm\" custom hook\n// Build out the logic needed for a form custom hook (see the useForm.js file)\n// and replace the necessary stateful logic from CheckoutForm with the hook\n\nconst CheckoutForm = props => {\n  _s();\n\n  const [values, handleChanges, handleSubmit, showSuccessMessage] = useForm(initialValue);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"form-header\",\n        children: \"Checkout Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"firstName\",\n          value: values.firstName,\n          onChange: handleChanges,\n          \"data-testid\": \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"lastName\",\n          value: values.lastName,\n          onChange: handleChanges,\n          \"data-testid\": \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"address\",\n          value: values.address,\n          onChange: handleChanges,\n          \"data-testid\": \"address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"city\",\n          value: values.city,\n          onChange: handleChanges,\n          \"data-testid\": \"city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"State:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"state\",\n          value: values.state,\n          onChange: handleChanges,\n          \"data-testid\": \"state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Zip:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"zip\",\n          value: values.zip,\n          onChange: handleChanges,\n          \"data-testid\": \"zip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"checkout\",\n        children: \"Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      \"data-testid\": \"successMessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have ordered some weights! Woo-hoo! \", /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          children: \"\\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your new weights will be shipped to:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"success-name\",\n        children: [values.firstName, \" \", values.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"success-address\",\n        children: values.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"success-area\",\n        children: [values.city, \", \", values.state, \" \", values.zip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheckoutForm, \"mFq1X9Zq8AalOFIIY3qeIrbWq2c=\", false, function () {\n  return [useForm];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/MattBokovitz/Desktop/workout-store/client/src/components/CheckoutForm.js"],"names":["React","useForm","initialValue","firstName","lastName","address","city","state","zip","CheckoutForm","props","values","handleChanges","handleSubmit","showSuccessMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm } from \"../hooks/useForm\";\n\nconst initialValue = {\n  firstName: \"\",\n  lastName: \"\",\n  address: \"\",\n  city: \"\",\n  state: \"\",\n  zip: \"\",\n};\n\n// This form should be handled by a \"useForm\" custom hook\n// Build out the logic needed for a form custom hook (see the useForm.js file)\n// and replace the necessary stateful logic from CheckoutForm with the hook\n\nconst CheckoutForm = (props) => {\n  const [values, handleChanges, handleSubmit, showSuccessMessage] =\n    useForm(initialValue);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <h2 data-testid=\"form-header\">Checkout Form</h2>\n        <label>\n          First Name:\n          <input\n            name=\"firstName\"\n            value={values.firstName}\n            onChange={handleChanges}\n            data-testid=\"firstName\"\n          />\n        </label>\n        <label>\n          Last Name:\n          <input\n            name=\"lastName\"\n            value={values.lastName}\n            onChange={handleChanges}\n            data-testid=\"lastName\"\n          />\n        </label>\n        <label>\n          Address:\n          <input\n            name=\"address\"\n            value={values.address}\n            onChange={handleChanges}\n            data-testid=\"address\"\n          />\n        </label>\n        <label>\n          City:\n          <input\n            name=\"city\"\n            value={values.city}\n            onChange={handleChanges}\n            data-testid=\"city\"\n          />\n        </label>\n        <label>\n          State:\n          <input\n            name=\"state\"\n            value={values.state}\n            onChange={handleChanges}\n            data-testid=\"state\"\n          />\n        </label>\n        <label>\n          Zip:\n          <input\n            name=\"zip\"\n            value={values.zip}\n            onChange={handleChanges}\n            data-testid=\"zip\"\n          />\n        </label>\n        <button data-testid=\"checkout\">Checkout</button>\n      </form>\n\n      {showSuccessMessage && (\n        <div className=\"success-message\" data-testid=\"successMessage\">\n          <p>\n            You have ordered some weights! Woo-hoo! <span role=\"img\">🎉</span>\n          </p>\n          <p>Your new weights will be shipped to:</p>\n          <br />\n          <br />\n          <p data-testid=\"success-name\">\n            {values.firstName} {values.lastName}\n          </p>\n          <p data-testid=\"success-address\">{values.address}</p>\n          <p data-testid=\"success-area\">\n            {values.city}, {values.state} {values.zip}\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}